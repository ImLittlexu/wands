plugins {    
    id "architectury-plugin" version "3.4-SNAPSHOT"
    id "dev.architectury.loom" version "1.6-SNAPSHOT" apply false
    id 'systems.manifold.manifold-gradle-plugin' version '0.0.2-alpha'
}

architectury {
    minecraft = rootProject.minecraft_version
}

subprojects {
    apply plugin: "dev.architectury.loom"

    loom {
        silentMojangMappingsLicense()
    }

    dependencies {
        minecraft "com.mojang:minecraft:${rootProject.minecraft_version}"        
        mappings loom.officialMojangMappings()
    }
}


allprojects {
    apply plugin: "java"    
    apply plugin: "architectury-plugin"
    apply plugin: "maven-publish"
    
    archivesBaseName = "${rootProject.archives_base_name}-mc${rootProject.minecraft_version}"
    version = "${rootProject.mod_version}-${rootProject.release_type}"
    group = rootProject.maven_group

    repositories {
        // Add repositories to retrieve artifacts from in here.
        // You should only use this when depending on other mods because
        // Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
        // See https://docs.gradle.org/current/userguide/declaring_repositories.html
        // for more information about repositories.
        maven { url "https://maven.nucleoid.xyz/" }
    }
    dependencies {
        annotationProcessor 'systems.manifold:manifold-preprocessor:2024.1.0'
        testAnnotationProcessor 'systems.manifold:manifold-preprocessor:2024.1.0'
        //annotationProcessor group: 'systems.manifold', name: 'manifold', version: '2023.1.29'
        //testAnnotationProcessor group: 'systems.manifold', name: 'manifold', version: '2023.1.29'

    }
    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"

        if( rootProject.java_version as Integer == 8){
            def targetVersion = 8
            if (JavaVersion.current().isJava9Compatible()) {
                options.release = targetVersion
            }            
        }else{
            options.release = rootProject.java_version as Integer   
        }
        options.compilerArgs += ['-Xplugin:Manifold']
    }

    java {
        withSourcesJar()
    }
   
}
